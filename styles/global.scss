@import 'vars';

@import "bulma/sass/base/generic.sass";
@import "bulma/sass/components/navbar.sass";
@import "bulma/sass/form/shared.sass";
@import "bulma/sass/elements/box.sass";
@import "bulma/sass/elements/button.sass";
@import "bulma/sass/elements/table.sass";
@import "bulma/sass/elements/title.sass";
@import "bulma/sass/grid/_all.sass";
@import "bulma/sass/helpers/_all.sass";
@import "bulma/sass/layout/_all.sass";
@import "bulma/sass/utilities/_all.sass";

@import "@fortawesome/fontawesome-svg-core/styles.css";
@import '@sweetalert2/theme-dark/dark.scss';

:root {
  background: $primary-bg;
  --xyz-ease: cubic-bezier(.26,2.05,.84,.38);
}

html,
body {
  padding: 0;
  margin: 0;
  color: white;
  font-family:
    Inter,
    -apple-system,
    BlinkMacSystemFont,
    Segoe UI,
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    Fira Sans,
    Droid Sans,
    Helvetica Neue,
    sans-serif;
}

.navbar {
  background: rgba(12,12,12,.90);
  z-index: 1000 !important;
}

.navbar > .is-active {
  background: rgba(12,12,12,.90);
}

a.navbar-item:hover, div.navbar-item:hover {
  background-color: transparent;
  color: $primary !important;
}

.navbar-burger {
  color: white;
}

a {
  color: lightblue;
  text-decoration: none;
}
a:hover {
  color: $primary;
  text-decoration: none;
}

.navbar-li-button {
  background-color: transparent;
  border-color: rgb(0, 119, 181);
  color: white;
}
.navbar-li-button:focus, .navbar-li-button:hover {
  outline: none;
  box-shadow: none;
  border-color: rgb(0, 119, 181);
  color: white;
}

.navbar-li-button:hover {
  background-color: rgb(0, 119, 181);
}

* {
  box-sizing: border-box;
}

.grid-col {
  border: 2px solid transparent;
}
.grid-col:hover {
  border: 2px solid $primary;
}

.section-bg {
  background: $section-bg;
}

.section-mg {
  margin: 0 0 1rem 0 !important;
  /*padding-bottom: 1rem !important;*/
}

.has-transparent-bg {
  background: transparent !important;
}

.auto-margins-x {
  margin-left: auto;
  margin-right: auto;
}

img {
  max-width: 100%;
  height: auto;
}

.section-title {
  width:100%;
  display: flex;
  justify-content: center;
  font-size: 2rem;
  padding: 2rem;
  color: $primary;
}

.section-title span {
  display: inline-block;
  position: relative;  
}
.section-title span:before,
.section-title span:after {
  content: "";
  position: absolute;
  height: 5px;
  border-radius: 0px !important;
  border-top: 4px solid $dark;
  top: 50% !important;
  width: 5rem;
}

.section-title span:before {
  right: 100%;
  margin-right: 15px;
  border-color: $primary;
}
.section-title span:after {
  left: 100%;
  margin-left: 15px;
  border-color: $primary;
}

/*****************************************************************
Styling for /blog routes:
*****************************************************************/
blockquote {
  background: rgba(10,100,100,.5);
  padding: 1rem;
  border-radius: 6px;
}

blockquoter > p {
  margin: 0;
}

h2, h3 {
  margin-top: 3rem;
}

.table {
  background: rgba(10, 100, 100, 0.5);
  border-radius: 2px;
  width: 100%;
}

td {
  color: white;
}

tr > th {
  color: $primary !important;
}

tr > .tableTitle {
  color: $info !important;
}

.neon-sign {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  span {
    font-size: 5.5vw;
    text-align: center;
    line-height: 1;
    color: #c6e2ff;
    animation: neon .08s ease-in-out infinite alternate;
  }

}
/*-- Animation Keyframes --*/
@keyframes neon {
  from {
    text-shadow:
    0 0 6px rgba(202,228,225,0.92),
    0 0 30px rgba(202,228,225,0.34),
    0 0 12px rgba(30,132,242,0.52),
    0 0 21px rgba(30,132,242,0.92),
    0 0 34px rgba(30,132,242,0.78),
    0 0 54px rgba(30,132,242,0.92);
  }
  to {
    text-shadow:
    0 0 6px rgba(202,228,225,0.98),
    0 0 30px rgba(202,228,225,0.42),
    0 0 12px rgba(30,132,242,0.58),
    0 0 22px rgba(30,132,242,0.84),
    0 0 38px rgba(30,132,242,0.88),
    0 0 60px rgba(30,132,242,1);
  }
}

/*****************************************************************
 *****************************************************************
 *****************************************************************
  Animations:
 *****************************************************************
 ***************************************************************** 
 *****************************************************************/

.blockchain-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 50%;
  width: 50%;
}
#redblocks > * {
  transform: translate3d(160px, -93px, 0);
  animation: moveblocks 4s 1s ease infinite;
}

@keyframes moveblocks {
  0% {
      transform: translate3d(160px, -93px, 0);
  }
  50%,
  100% {
      transform: translate(0);
  }
}

#firstBlock {
  transform: translate3d(160px, -93px, 0);
  animation: firstBlock 4s 1s ease infinite;
}
#blockdis {
  animation: blockdis 4s 1s ease infinite;
}
@keyframes blockdis {
  30% {
      opacity: 1;
  }
  40%, 100% {
      opacity: 0;
      transform: translate3d(-160px, 93px, 0);
  }
}
@keyframes firstBlock {
  0%,
  15% {
      opacity: 0;
  }
  40%,
  100% {
      opacity: 1;
  }
}

@for $i from 1 to 5 {
  #redblocksparticles g:nth-child(#{$i}) polygon {
      opacity: 0.35;
      animation: glow 4s 1s ease infinite;
  }
}
@for $i from 1 to 20 {
  #redblocksparticles g:nth-child(1) g circle:nth-child(#{$i}){
      animation: dots 4s #{1000+$i*50}ms ease infinite;
  }
  #redblocksparticles g:nth-child(2) g circle:nth-child(#{$i}){
      animation: dots 4s #{1000+$i*50}ms ease infinite;
  }
  #redblocksparticles g:nth-child(3) g circle:nth-child(#{$i}){
      animation: dots 4s #{1000+$i*50}ms ease infinite;
  }
  #redblocksparticles g:nth-child(4) g circle:nth-child(#{$i}){
      animation: dots 4s #{1000+$i*50}ms ease infinite;
  }
}
@keyframes glow {
  0%,
  45% {
      opacity: 0;
  }
  60%, 100% {
      opacity: 0.35;
  }
}

@keyframes dots {
  0%,
  35% {
      transform: translate(0);
      opacity: 0;
  }
  60%, 80% {
      transform: translate(55px, -35px);
      opacity: 1;
  }
  100% {
      transform: translate(55px, -35px);
      opacity: 0;
  }
}

@for $i from 1 to 22 {
  #purplebg > :nth-child(#{$i}) {
      animation: up 2s #{$i* 500}ms ease infinite alternate;
  }
}

@keyframes up {
  to {
      transform: translate(0, -25px);
  }
}

@for $i from 1 to 13 {
  #bottomparticles > :nth-child(#{$i}){
      animation: particles 4s #{$i*300}ms ease infinite alternate, p 2s ease infinite alternate;
  }
  #bottomparticles2 > :nth-child(#{$i}){
      animation: particles 4s #{$i*300}ms ease infinite alternate, p 2s ease infinite alternate;
  }
  #redglowparticles > :nth-child(#{$i}){
      animation: particles 4s #{$i*300}ms ease infinite alternate, p 2s ease infinite alternate;
  }

}
@keyframes p {
  85%,
   100% {
      opacity: 0;
  }
}

@keyframes particles {
  0%, 100% {
      transform: translate(0);
  }
  50% {
      transform: translate(10px, 15px);
  }
}

.particlespoly {
  animation: p 2s ease infinite alternate;
}

@for $i from 1 to 4 {
  #d-app g:nth-child(#{$i}){
      animation: updown 2s #{$i*200}ms ease-in-out infinite alternate;
  }
}
@for $i from 1 to 4 {
  #d-apps2 g:nth-child(#{$i}){
      animation: updown 2s #{$i*200}ms ease-in-out infinite alternate;
  }
}
@for $i from 1 to 20 {
  #d-apps2wrapper g:nth-child(3) g > circle:nth-child(#{$i}){
      animation: updown 2s #{$i*50}ms ease infinite alternate;
  }
}
@for $i from 1 to 20 {
  #d-appswrapper g:nth-child(2) g > circle:nth-child(#{$i}){
      animation: updown 2s #{$i*50}ms ease infinite alternate;
  }
}


@keyframes updown {
  100% {
      transform: translate(0, -20px);
  }
}

#Layer_1 > g:nth-child(2) > g:nth-child(18) > g:nth-child(12) {
  animation: arrows 1s ease-in-out infinite alternate, p 2s ease infinite alternate;
}
@keyframes arrows {
  to {
      transform: translate(25px, 25px);
  }
}

#Layer_1 > g:nth-child(2) > g:nth-child(17) > g:nth-child(13) {
  animation: arrows2 1s ease-in-out infinite alternate, p 2s ease infinite alternate;
}
@keyframes arrows2 {
  to {
      transform: translate(-25px, -25px);
  }
}

#Layer_1 > g:nth-child(2) > g:nth-child(17) > g:nth-child(12) {
  animation: arrows 1s ease-in-out infinite alternate, p 2s ease infinite alternate;
}

/*****************************************************************
  Animation: 3D striped cube
 *****************************************************************/

$striped-cube-size: 15;
$striped-cube-speed: 7;
$striped-cube-trans: linear;
$striped-cube-hole: #121255;
$striped-cube-start: #D02A41;
$striped-cube-line: #202333;
$striped-cube-ini: from 90deg at;
$striped-cube-end: 0 25%, #fff0 0 100%;
$striped-cube-bg: 
  conic-gradient($striped-cube-ini 97.5% 97.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 95% 95%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 92.5% 92.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 90% 90%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 87.5% 87.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 85% 85%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 82.5% 82.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 80% 80%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 77.5% 77.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 75% 75%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 72.5% 72.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 70% 70%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 67.5% 67.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 65% 65%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 62.5% 62.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 60% 60%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 57.5% 57.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 55% 55%, $striped-cube-line $striped-cube-end), 
  conic-gradient($striped-cube-ini 52.5% 52.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 50% 50%, $striped-cube-start $striped-cube-end), 
  conic-gradient($striped-cube-ini 47.5% 47.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 45% 45%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 42.5% 42.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 40% 40%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 37.5% 37.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 35% 35%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 32.5% 32.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 30% 30%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 27.5% 27.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 25% 25%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 22.5% 22.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 20% 20%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 17.5% 17.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 15% 15%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 12.5% 12.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 10% 10%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 7.5% 7.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 5% 5%, $striped-cube-line $striped-cube-end),
  conic-gradient($striped-cube-ini 2.5% 2.5%, $striped-cube-hole $striped-cube-end), 
  conic-gradient($striped-cube-ini 0% 0%, $striped-cube-start $striped-cube-end);

.striped-cube-container {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  perspective: 1000vmin;
  background: transparent;
}

.cube {
  width: calc($striped-cube-size * 1vmin);
  height:  calc($striped-cube-size * 1vmin);
  background: $striped-cube-bg, $striped-cube-hole;
  background-size: 200% 200%;
  background-position: 0% 0%;
  background-repeat: no-repeat;
  transform: rotateX(45deg) rotateZ(45deg) translateZ(calc(calc($striped-cube-size * 1vmin) / 2));
  transform-style: preserve-3d;
  animation: move-top calc($striped-cube-speed * 1s) $striped-cube-trans 0s infinite;

}

.cube::before, .cube::after {
  content: "";
  background: $striped-cube-bg, $striped-cube-hole;
  background-size: 200% 200%;
  background-position: 100% 100%;
  background-repeat: no-repeat;
  background-attachment: fixed;
  position: absolute;
  width: 100%;
  height: 100%;
  transform: rotate(180deg) rotateY(-90deg) translateY(calc($striped-cube-size * 1vmin));
  transform-origin: right bottom;
  animation: move-side calc($striped-cube-speed * 1s) $striped-cube-trans calc($striped-cube-speed * -0.95s) infinite;
  opacity: 0.65;
} 

.cube::after {
  position: absolute;
  transform: rotate(180deg) rotateY(-90deg) rotateX(-90deg) translateY(calc($striped-cube-size * 1vmin));
  opacity: 0.35;
}

@keyframes move-top {
  100% { background-position: 100% 100%; }
}
@keyframes move-side {
  100% { background-position: 0% 0%; }
}


/*****************************************************************
  Animation: Cubes Wave
 *****************************************************************/

$total: 36;
$time: 5s;
$waveCubeSize: 24px;
$wrap-z: $waveCubeSize * -2;

/*
html, body {
  height: 100%;
}

body {
  overflow: hidden;
  background: black;
}
*/

.cube-wave-wrap {
  position: relative;
  width: $waveCubeSize * 6;
  height: $waveCubeSize * 6;
  top: 50%;
  transform-style: preserve-3d;
  perspective: 1000px;
  perspective-origin: bottom;
  transform: rotateX(-20deg) rotateY(0);
  margin: $waveCubeSize * -3 auto 0;
}

.cube-wrap {
  position: relative;
  transform-style: preserve-3d;
  perspective: 3000px;
  float: left;
  height: $waveCubeSize;
  width: $waveCubeSize;
  transform: translate3d(0,0,$wrap-z) rotateX(0);
  animation: move $time infinite;
  @for $i from 1 through $total {
    &:nth-child(#{$i}){
      animation-delay: (($i - 1) * $time/$total/3);
    }
  }
}


@keyframes move {
  0%, 30% {
    transform: translate3d(0,0,$wrap-z) rotateX(0);
  }
  40% {
    transform: translate3d(0,0,0) rotateX(90deg);
  }
  60%, 100% {
    transform: translate3d(0,0,$wrap-z) rotateX(0);
  }
}

.wave-cube {
  $z: $waveCubeSize/2;
  height: $waveCubeSize;
  width: 100%;
  height: 100%;
  .side {
    position: absolute;
    height: inherit;
    width: inherit;
  }
  .side:nth-child(1){
    transform: rotateX(90deg) translateZ($z);
  }
  .side:nth-child(2){
     transform: translateZ($z);
  }
  .side:nth-child(3){
     transform: rotateY(180deg) translateZ($z);
  }
  .side:nth-child(4){
     transform: rotateY(90deg) translateZ($z);
  }
  .side:nth-child(5){
     transform: rotateY(-90deg) translateZ($z);
  }
  .side:nth-child(6){
     transform: rotateX(-90deg) translateZ($z);
  }
}

@for $x from 1 through $total {
  $hue: 330 + $x * 1.3;
  @for $i from 1 through 6 {
    .cube-wrap:nth-child(#{$x}) .side:nth-child(#{$i}){
      background: hsla($hue, 66%, 49%, .55);

      border: 2px solid lighten(hsla($hue, 100%, 10%, .6), 20%); 
    }
  }
}


/*****************************************************************
  Animation: Glow Box
 *****************************************************************/

.glow-box{
    position: absolute;
    top: 50%;   left: 50%;
    transform: translate(-50%,-50%) rotate(-30deg) skewX(22deg);
    width: 100px;  height: 100px;
    background: url('/img/keylock.jpg');
    background-color: #040342;
    background-size: 100px 100px;
    transition: .5s;
}
.glow-box:hover{
    //transform: translate(-50%,-50%); 
}
.glow-box::before{
    content: '';
    position: absolute;
    top: 0;  left: -40px;
    width: 40px;  height: 100%;
    background: linear-gradient(90deg , #f00 , #262626);
    transform-origin: right;
    transform: skewY(-45deg);
    animation: animateBefore 1s infinite linear;
    transition: .5s;
}
.glow-box::after{
    content: '';
    position: absolute;
    bottom: -40px;  left: 0;
    width: 100%;  height: 40px;
    background: linear-gradient(0deg , #f00 , #262626);
    transform-origin: top;
    transform: skewX(-45deg);
    animation: animateAfter 1s infinite linear;
    transition: .5s;
}

.glow-box:hover::before{
    //transform: skewY(-45deg) rotateY(90deg);
}
.glow-box:hover::after{
    //transform: skewX(-45deg) rotateX(90deg);
}
@keyframes animateBefore{
    0%{
        box-shadow: -10px 0 60px 20px #f00;  
    }
    25%{
        box-shadow: -10px 0 60px 24px #f00;  
    }
    50%{
        box-shadow: -10px 0 60px 20px #f00;  
    }
    75%{
        box-shadow: -10px 0 100px 40px #f00;  
    }
    100%{
        box-shadow: -10px 0 60px 20px #f00;  
    }
}

@keyframes animateAfter{
    0%{
        box-shadow: 0 10px 60px 10px #f00;
    }
    25%{
        box-shadow: 0 10px 60px 15px #f00;
    }
    50%{
        box-shadow: 0 10px 60px 10px #f00;
    }
    75%{
        box-shadow: 0 10px 100px 30px #f00; 
    }
    100%{
        box-shadow: 0 10px 60px 10px #f00; 
    }
}


/*****************************************************************
  Isometric Footer Icons:
 *****************************************************************/
$icon-colors: #00aced, black, #F48024, #007bb6, #e4405f;

.icon-list {
  display: flex;
  list-style-type: none;
  justify-content: center;
  padding: 0.25rem;

  .icon-list__item {
    margin: 0 40px;

    a {
      .icon-box {
        --box-width: 5rem;
        --box-height: 5rem;
        --box-depth: 1rem;

        width: var(--box-width);
        height: var(--box-height);
        position: relative;
        transform-style: preserve-3d;
        transform: rotateX(55deg) rotateZ(45deg);
        transition: 0.5s;

        .box__face {
          position: absolute;
          font-size: 0.625rem;
          font-weight: bold;
          color: white;
          text-align: center;
        }

        .box__face--front,
        .box__face--back {
          width: var(--box-width);
          height: var(--box-height);
          line-height: var(--box-height);
        }

        .box__face--right,
        .box__face--left {
          width: var(--box-depth);
          height: var(--box-height);
          left: calc((var(--box-width) - var(--box-depth)) / 2);
          line-height: var(--box-height);
        }

        .box__face--top,
        .box__face--bottom {
          width: var(--box-width);
          height: var(--box-depth);
          top: calc((var(--box-height) - var(--box-depth)) / 2);
          line-height: var(--box-depth);
        }

        .box__face--front {
          display: flex;
          justify-content: center;
          align-items: center;
          background: white;
          transition: 0.5s;

          svg {
            transform: rotate(270deg);
            path {
              transition: 0.5s;
            }
          }
        }

        .box__face--right {
          background: darken(white, 10%);
          transition: 0.5s;
        }

        .box__face--bottom {
          background: darken(white, 30%);
          transition: 0.5s;
        }

        .box__face--back {
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
          transition: 0.5s;
        }

        .box__face--front {
          transform: rotateY(0deg) translateZ(calc(var(--box-depth) / 2));
        }
        .box__face--back {
          transform: rotateY(180deg) translateZ(calc(var(--box-depth) / 2));
        }

        .box__face--right {
          transform: rotateY(90deg) translateZ(calc(var(--box-width) / 2));
        }
        .box__face--left {
          transform: rotateY(-90deg) translateZ(calc(var(--box-width) / 2));
        }

        .box__face--top {
          transform: rotateX(90deg) translateZ(calc(var(--box-height) / 2));
        }
        .box__face--bottom {
          transform: rotateX(-90deg) translateZ(calc(var(--box-height) / 2));
        }
      }
    }

    &:hover {
      @for $i from 1 through 5 {
        &:nth-child(#{$i}) a {
          .icon-box {
            transform: rotateX(55deg) rotateZ(45deg) translateZ(20px);

            .box__face--back {
              box-shadow: -30px 30px 50px rgba(0, 0, 0, 0.5);
            }
          }

          .box__face--front {
            background: nth($icon-colors, $i);

            svg path {
              fill: white;
            }
          }

          .box__face--right {
            background: darken(nth($icon-colors, $i), 5%);
          }

          .box__face--bottom {
            background: darken(nth($icon-colors, $i), 10%);
          }
        }
      }
    }
  }
}


/*****************************************************************
  Animation: Morhping UI Displays
 *****************************************************************/

.loader {
  position: relative;
  width: 200px;
  height: 200px;
}


/* The dot */
.loader > .dot {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 10;

  width: 160px;
  height: 100px;
  
  margin-top: -50px;
  margin-left: -80px;

  border-radius: 5px;

  background-color: #D02A41;

  transform-type: preserve-3d;

  animation: dot1 5s cubic-bezier(.55,.3,.24,.99) infinite;
}

.loader > .dot:nth-child(2) {
  z-index: 11;
  
  width: 150px;
  height: 90px;
  
  margin-top: -45px;
  margin-left: -75px;
  
  border-radius: 3px;
  
  background-color: #202333;
  
  animation-name: dot2;
}

.loader > .dot:nth-child(3) {
  z-index: 12;
  
  width: 40px;
  height: 20px;
  
  margin-top: 50px;
  margin-left: -20px;
  
  border-radius: 0 0 5px 5px;
  
  background-color: #303444;
  
  animation-name: dot3;
}

@keyframes dot1 {
  3%, 97% {
    width: 160px;
    height: 100px;

    margin-top: -50px;
    margin-left: -80px;
  }
  30%, 36% {
    width: 80px;
    height: 120px;

    margin-top: -60px;
    margin-left: -40px;
  }
  63%, 69% {
    width: 40px;
    height: 80px;

    margin-top: -40px;
    margin-left: -20px;
  }
}

@keyframes dot2 {
  3%, 97% {
    width: 150px;
    height: 90px;

    margin-top: -45px;
    margin-left: -75px;
  }
  30%, 36% {
    width: 70px;
    height: 96px;

    margin-top: -48px;
    margin-left: -35px;
  }
  63%, 69% {
    width: 32px;
    height: 60px;

    margin-top: -30px;
    margin-left: -16px;
  }
}

@keyframes dot3 {
  3%, 97% {
    width: 40px;
    height: 20px;

    margin-top: 50px;
    margin-left: -20px;
  }
  30%, 36% {
    width: 8px;
    height: 8px;

    margin-top: 49px;
    margin-left: -5px;
    
    border-radius: 8px;
  }
  63%, 69% {
    width: 16px;
    height: 4px;

    margin-top: -37px;
    margin-left: -8px;
    
    border-radius: 10px;
  }
}



/*****************************************************************
  Animation: Rubik Cube
 *****************************************************************/

$duration: 4s;
$delays: ();
$variance: 300;
$easing: cubic-bezier(.5, 0, 0, 1);
$gap: 2px;

@for $row from 1 through 3 {
  @for $col from 1 through 3 {
    @for $layer from 1 through 3 {
      $delays: map-merge($delays, ('#{$row}#{$col}#{$layer}': random($variance)));
    }
  }
}

*, *:before, *:after {
  box-sizing: border-box;
  position: relative;
  animation-timing-function: $easing !important;
}

/*
body {
  display: flex;
  justify-content: center;
  align-items: center;
  transform-style: preserve-3d;
  perspective: 1000px;
  background: linear-gradient(to bottom right, #a4c5c7, #2D3F48);
  
  &:hover {
    > label, > input {
      opacity: 1;
    }
  }
}
*/

label, #shadows {
  position: fixed;
  top: 2vmin;
  opacity: 0.5;
}
label {
  left: 6vmin;
  color: white;
  font-weight: bold;
}
#shadows {
  left: 2vmin;
}

#shadows:not(:checked) ~ .cubes {
  --shadow-filter: none;
}

.cubes {
  width: 10vmin;
  height: 10vmin;
  transform: rotateX(60deg) rotateZ(-45deg);
  backface-visibility: visible;
  overflow: visible;
  transform-style: preserve-3d;
  perspective: 9000px;
}

.rubik-cube, .large-shadow {
  height: 10vmin;
  width: 10vmin;
  transform-style: preserve-3d;
  backface-visibility: visible;
  transform-origin: center center -.5vmin;
  position: absolute;
  top: 0;
  left: 0;
  
  > .cube-wrap {
    animation: rubik-cube-anim $duration infinite both;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    backface-visibility: visible;
    transform-origin: center center -.5vmin;
    will-change: transform;
    
    @keyframes rubik-cube-anim {
      from, to, 20%, 60% {
        animation-timing-function: step-start;
        transform: none;
      }

      40% {
        transform: rotateY(-1turn);
      }
    }
  }
  
  &[data-cube^="1"] {
    top: calc(-10vmin - #{$gap});
    --color-bg-top: red;
    --color-bg-bottom: #D02A41;
    --color-fl-top: red;
    --color-fl-bottom: #e8203c;
  }
  &[data-cube^="2"] {
    --color-bg-top: #D02A41;
    --color-bg-bottom: #d7102a;
    --color-fl-top: #e8203c;
    --color-fl-bottom: #f2303c;
  }
  &[data-cube^="3"] {
    top: calc(10vmin + #{$gap});
    --color-bg-top: #d7102a;
    --color-bg-bottom: #d9203d;
    --color-fl-top: #f2303c;
    --color-fl-bottom: #f5403c;
  }
  &[data-cube^="11"],
  &[data-cube^="21"],
  &[data-cube^="31"]{
    left: calc(-10vmin - #{$gap});
    --color-fr-top: darkred;
    --color-fr-bottom: darkred;
  }
  &[data-cube^="12"],
  &[data-cube^="22"],
  &[data-cube^="32"]{
    --color-fr-top: darkred;
    --color-fr-bottom: darkred;
  }
  &[data-cube^="13"],
  &[data-cube^="23"],
  &[data-cube^="33"]{
    left: calc(10vmin + #{$gap});
    --color-fr-top: darkred;
    --color-fr-bottom: darkred;
  }
  
  &[data-cube$="2"] {
    transform: translateZ(calc(10vmin + #{$gap}));
  }
  
  &[data-cube$="3"] {
    transform: translateZ(calc(-10vmin - #{$gap}));
  }
}


.large-shadows {
  transform: translateZ(-21vmin);
}
.large-shadow {
  background: black;
  height: 10vmin;
  width: 10vmin;
  transform-origin: top right;
  animation: large-shadow $duration infinite both;
  filter: var(--shadow-filter, blur(3vmin));
  opacity: 0.2;
  will-change: transform;
  
  @keyframes large-shadow {
    from, 80%, to {
      transform: scale(1.5, 3);
    }
    20% {
      transform: scale(1.5, 2);
    }
    40%, 60% {
      transform: scale(1.5, 5);
    }
    50% {
      transform: scale(1, 5);
    }
  }
}

[class^="cube-"] {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: visible;
  top: 0;
  left: 0;
  
  &, &:before {
    will-change: transform;
    animation: any $duration infinite both;
  }
  
  &:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: inherit;
  }
}

.cube-top {
  animation-name: cube-top;
  overflow: hidden;
  
  &:before, &:after {
    will-change: transform;
  }
  
  &:before {
    background-image:
      linear-gradient(to bottom, #CBFEFF,  transparent),
      linear-gradient(to bottom, var(--color-bg-top), var(--color-bg-bottom));
    background-size: 2px 100%, auto;
    background-repeat: no-repeat;
  }
  
  &:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #DFF4F0;
    animation: cube-top-flash $duration infinite both;
    
    @keyframes cube-top-flash {
      from, 50%, 60%, to {
        opacity: 0;
      }
      52% {
        opacity: 0.9;
      }
    }
  }
  
  @keyframes cube-top {
    20% {
      transform: translateZ(calc(-10vmin + 2vmin));
    }
    40%, 60%, 80% {
      transform: none;
    }
  }
}

.cube-front-left {
  transform-origin: left center;
  transform: rotateY(90deg);
  overflow: hidden;
  
  &:before {
    background-image:
      linear-gradient(to bottom, var(--color-fl-top), var(--color-fl-bottom)),
      linear-gradient(to bottom, rgba(white, .5), transparent 60%);
    background-size: auto auto 1px 100%;
    background-repeat: no-repeat;
    transform-origin: right;
    animation-name: cube-front-left;
    will-change: transform;
  }
  
  @keyframes cube-front-left {
    20% {
      transform: scaleX(.2);
    }
    40%, 60% {
      transform: translateX(-8vmin) scaleX(.2) ;
    }
    80% {
      transform: none;
    }
  }
}

.cube-front-right {
  transform-origin: bottom center;
  transform: rotateX(90deg);
  
  &:before {
    // background-color: #2C5060;
    background-image:
      linear-gradient(to right, var(--color-fr-top), var(--color-fr-bottom));
    transform-origin: top;
    animation-name: cube-front-right;
    will-change: transform;
  }
  
  @keyframes cube-front-right {
    20% {
      transform: scaleY(.2);
    }
    40%, 60% {
      transform: translateY(8vmin) scaleY(.2) ;
    }
    80% {
      transform: none;
    }
  }
}

.cube-bottom {
  transform: translateZ(-10vmin);
  background-image:
    linear-gradient(to bottom, var(--color-bg-top), var(--color-bg-bottom));
  animation-name: cube-bottom;
  
  @keyframes cube-bottom {
    from, 20%, 80%, to {
      transform: translateZ(calc(-10vmin + 1px)) scale(.95);
    }
    40%, 60% {
      transform: translateZ(-2vmin) scale(.95);
    }
  }
  
  &:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #DFF4F0;
    animation: cube-bottom-flash $duration infinite both;
    will-change: transform;
    
    @keyframes cube-bottom-flash {
      from, 40%, 50%, to {
        opacity: 0;
      }
      45% {
        opacity: 0.9;
      }
    }
  }
}

[class^="shadow"] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  filter: var(--shadow-filter, blur(20px));
  
  &, &:before {
    will-change: transform;
  }
  
  &:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #214354;
    opacity: 0.7;
  }
}

.shadow-y {
  animation: shadow-y $duration infinite both;
  
  &[data-cube^="11"],
  &[data-cube^="21"] {
    left: 10%;
  }
  &[data-cube^="13"],
  &[data-cube^="23"] {
    left: -10%;
  }
  
  @keyframes shadow-y {
    to, 40%, 60%, 80%, from {
      transform: translateY(-100%) scale(2, .75);
    }
    20% {
      transform: scale(2, 1);
    }
  }
  
  &:before {
    animation: shadow-y-inverse $duration infinite both;
    transform-origin: top center;
    
    @keyframes shadow-y-inverse {
      to, 40%, 60%, 80%, from {
        opacity: 0.9;
        transform: scale(2, 1)
      }
      20% {
        opacity: 0;
        transform: translateY(-100%) scale(2, .75);
      }
    }
  }
}

.shadow-flip {
  width: 2vmin;
  height: 50%;
  top: -1vmin;
  left: calc(50% - 1vmin);
  transform-origin: top center;
  filter: var(--shadow-filter, blur(1vmin));
  animation: shadow-flip $duration infinite both;
  overflow: visible;
  
  @keyframes shadow-flip {
    from, 20%, 40%, 50%, to {
      transform: rotate(90deg);
    }
    45% {
      transform: rotate(270deg);
    }
  }
  
  &:before {
    animation: shadow-flip-inverse $duration infinite both;
    transform-origin: top center;
    opacity: 0;
    
    @keyframes shadow-flip-inverse {
      from, 20%, 40%, 50%, to {
        transform: rotate(0deg);
        opacity: 0;
      }
      45% {
        transform: rotate(-180deg);
        opacity: 0.6;
      }
    }
  }
}

.shadow-z {
  animation: shadow-z $duration infinite both;
  overflow: visible;
  will-change: transform;
  transform-origin: top center;
  
  &[data-cube^="11"] {
    --shadow-z-left: 50%;
    --shadow-z-top: 50%;
  }
  &[data-cube^="21"],
  &[data-cube^="31"] {
    --shadow-z-left: 50%;
    --shadow-z-top: 0;
  }
  &[data-cube^="32"] {
    --shadow-z-left: 0;
    --shadow-z-top: 0;
    --shadow-x-scale: 2;
  }
  &[data-cube^="33"] {
    --shadow-z-left: -50%;
    --shadow-z-top: 0;
  }
  
  @keyframes shadow-z {
    from, 40%, 60%, 80%, to {
      transform: scale(var(--shadow-x-scale), 2);
    }
    20% {
      transform: translateX(var(--shadow-z-left)) translateY(var(--shadow-z-top)) scale(calc(var(--shadow-x-scale, 1) / 2), 2);
    }
  }
  
  &:before {
    animation: shadow-z-inverse $duration infinite both;
    
    @keyframes shadow-z-inverse {
      40%, 60% {
        transform: translateX(var(--shadow-z-left)) translateY(var(--shadow-z-top)) scale(var(--shadow-x-scale, 1), 2);
      }
      45% {
        opacity: 0;
      }
      from, 40%, 55% {
        opacity: .5;
      }
      to {
        opacity: 1;
      }
      from, 20%, 80%, to {
        transform: scale(2);
      }
    }
  }
}

@each $key in map-keys($delays) {
  .rubik-cube[data-cube="#{$key}"] > .cube-wrap {
    &, > [class^="cube-"] {
      &, &:before, &:after {
        animation-delay: map-get($delays, $key) * 1ms;
      }
    }
    [class^="shadow-"] {
      animation-delay: map-get($delays, $key) * 1ms;
    }
  }
  [class^="shadow-"][data-cube="#{$key}"]:before,
  .large-shadow[data-cube="#{$key}"] {
    animation-delay: map-get($delays, $key) * 1ms;
  }
}


/*****************************************************************
  ISO Cube Design Component
 *****************************************************************/

/*
#backdrop {
  width: 600px;
  color: #0f0;
  font-family: monospace;
  font-size: 24px;
  margin: 0 auto;
  -webkit-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -ms-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -moz-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -o-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
}

.iso-cube {
  position: absolute;
  top: 90px;
  left: 360px;
}

.face {
  position: absolute;
  width: 200px;
  height: 200px;
  overflow: hidden;
  font-family: monospace;
  font-size: 24px;
}


.top {
  top: 0;
  left: 86px;
  background: #fff;
  color: #999;
  -webkit-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -ms-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -moz-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -o-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
}

.left {
  top: 165px;
  left: 0;
  background: #999;
  color: #333;
  -webkit-transform: rotate(30deg) skewX(30deg) skewY(0deg);
  -ms-transform: rotate(30deg) skewX(30deg) skewY(0deg);
  -moz-transform: rotate(30deg) skewX(30deg) skewY(0deg);
  -o-transform: rotate(30deg) skewX(30deg) skewY(0deg);
  transform: rotate(30deg) skewX(30deg) skewY(0deg);
}

.right {
  top: 165px;
  left: 172px;
  background: #ccc;
  color: #666;
  -webkit-transform: rotate(-30deg) skewX(-30deg) skewY(0deg);
  -ms-transform: rotate(-30deg) skewX(-30deg) skewY(0deg);
  -moz-transform: rotate(-30deg) skewX(-30deg) skewY(0deg);
  -o-transform: rotate(-30deg) skewX(-30deg) skewY(0deg);
  transform: rotate(-30deg) skewX(-30deg) skewY(0deg);
}


.shadow {
  top: 330px;
  left: -86px;
  background: black;
  opacity: 0.5;
  -webkit-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -ms-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -moz-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  -o-transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
  transform: rotate(-30deg) skewX(30deg) skewY(0deg) scaleY(0.87);
}

#two {
  -webkit-transform: scale(0.75) translate(320px, 400px);
  -moz-transform: scale(0.75) translate(320px, 400px);
  -o-transform: scale(0.75) translate(320px, 400px);
  -ms-transform: scale(0.75) translate(320px, 400px);
  transform: scale(0.75) translate(320px, 400px);
}
*/